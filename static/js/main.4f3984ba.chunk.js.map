{"version":3,"sources":["Loading.js","Quote.js","App.js","index.js"],"names":["Loading","className","Quote","useState","quote","setquote","author","setauthor","loading","setLoading","useEffect","getQuotes","fetch","then","res","json","data","dataQuote","quotes","randomQuote","Math","floor","random","length","catch","err","console","log","id","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"sLAUeA,EARA,WACX,OACI,qBAAKC,UAAU,OAAf,SACI,gDCkDGC,EAnDD,WACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA2BJ,oBAAS,GAApC,mBAAOK,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,MACA,IAEF,IAAMA,EAAY,WAChBF,GAAW,GAEXG,MADQ,0IAEPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAIC,EAAYD,EAAKE,OAEjBC,EAAYF,EADHG,KAAKC,MAAMD,KAAKE,SAASL,EAAUM,SAEhDlB,EAAUc,EAAYf,OACtBG,EAAWY,EAAYb,WACtBkB,OAAM,SAAAC,GACPC,QAAQC,IAAIF,OAUlB,OAAGjB,EACM,cAAC,EAAD,IAKH,sBAAKoB,GAAG,YAAR,UACE,qBAAKA,GAAG,OAAR,SACE,4BAAIxB,MAEN,qBAAKwB,GAAG,SAAR,SACE,4BAAItB,MAEN,8BACE,wBAAQsB,GAAG,MAAMC,QAlBL,WACpBlB,KAiBQ,6BCxCKmB,MANf,WACI,OACG,cAAC,EAAD,K,MCCPC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.4f3984ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loading =() =>{\r\n    return (\r\n        <div className=\"load\">\r\n            <h1>Loading....</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","import React,{useState,useEffect} from 'react';\r\nimport Loading from './Loading.js';\r\n\r\n\r\nconst Quote = () =>{\r\n  const [quote, setquote] = useState(\"\");\r\n  const [author, setauthor] = useState(\"\");\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  useEffect(() => {\r\n    getQuotes()\r\n  },[])\r\n\r\n  const getQuotes = () =>{\r\n    setLoading(false);\r\n    let url=\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      let dataQuote = data.quotes;\r\n      let ranNum = Math.floor(Math.random()*dataQuote.length);\r\n      let randomQuote=dataQuote[ranNum];\r\n      setquote( randomQuote.quote);\r\n      setauthor( randomQuote.author);\r\n    }).catch(err =>{\r\n      console.log(err);\r\n    })\r\n\r\n    \r\n  }\r\n\r\nconst generateQuote = () =>{\r\n  getQuotes();\r\n}\r\n\r\nif(loading){\r\n  return <Loading />\r\n}\r\n\r\n    return (\r\n\r\n      <div id=\"quote-box\">\r\n        <div id=\"text\">\r\n          <p>{quote}</p>\r\n        </div>\r\n        <div id=\"author\">\r\n          <p>{author}</p>\r\n        </div>\r\n        <div>\r\n          <button id=\"new\" onClick={generateQuote}>New Quote</button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Quote;","import React from 'react';\r\nimport Quote from './Quote';\r\n\r\nfunction App(){\r\n    return(\r\n       <Quote />\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}